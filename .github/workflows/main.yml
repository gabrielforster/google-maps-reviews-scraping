name: Deploy main branch

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'packages' output variable
      # this outputs is used from needs context
      # https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/
      frontend: ${{ steps.frontend.outputs.frontend }}
      packages: ${{ steps.backend.outputs.changes }}
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Commit Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        id: extract_branch
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

      - uses: dorny/paths-filter@v2
        id: backend
        with:
          filters: |
            scraper: scraper/**
            places: places/**
          base: ${{ steps.extract_branch.outputs.branch }}

      - uses: dorny/paths-filter@v2
        id: frontend
        with:
          filters: |
            www:
              - 'frontend/**'
          base: ${{ steps.extract_branch.outputs.branch }}

  deployPlaces:
    name: Deploy places service
    runs-on: ubuntu-latest
    working-directory: places/
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load ".env" file to prisma connection
      run: |
        touch .env
        echo DATABASE_URL=""${{ secrets.DATABASE_URL }}"" >> .env

    - name: Install code dependencies
      run: npm ci

    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deployScraper:
    name: Deploy scraper service
    runs-on: ubuntu-latest
    working-directory: scraper/
    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install code dependencies
      run: npm ci

    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

